import sys
sys.setrecursionlimit(10005)


gFriendList = {}
gCheckingList = []


def getInput(fileOrInput):

  if fileOrInput == "Input":
    numStudents = int(input())
    for i in range(numStudents):
      pair = input()
      a, b = pair.split()
      gFriendList[int(a)] = int(b)
    while True:
      pair = input()
      a, b = pair.split()
      if a =='0' and b == '0':
        break
      gCheckingList.append([int(a),int(b)])

  if fileOrInput == "File":
    f = open("input.txt", "r")
    numStudents = int(f.readline())
    for i in range(numStudents):
      pair = f.readline()
      a, b = pair.split()
      gFriendList[int(a)] = int(b)
    while True:
      pair = f.readline()
      a, b = pair.split()
      # print(a,b)
      if a =='0' and b == '0':
        break
      gCheckingList.append([int(a),int(b)])

def inCircle(rootFriend, destinationFriend, currFriend, distance, alreadyVisited):
  alreadyVisited.append(currFriend)
  if currFriend == destinationFriend:
    return distance

  if currFriend == rootFriend:
    return -1
  #print(currFriend)
  nextFriend = gFriendList[currFriend]
  if nextFriend in alreadyVisited:
    return -1
  dist = inCircle(rootFriend, destinationFriend, nextFriend, distance+1, alreadyVisited)
  return dist
#------------------main--------------------

getInput("Input")
# print(gFriendList)
# print(gCheckingList)
for i in gCheckingList:
  #print(i)
  friendDist = inCircle(i[0], i[1], gFriendList[i[0]], 0, [])
  if friendDist < 0:
    print("No")
  else:
    print("Yes %d"%friendDist)
